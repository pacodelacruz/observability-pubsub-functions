{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "appName": {
      "type": "string",
      "metadata": {
        "description": "Used to name the different components of the Sample App. I.e. the Function App, the consumption plan, Application Insights, Service Bus, and the Azure Storage account. Bear in mind that many of these resources require a globally unique name"
      }
    },
    "queueName": {
      "type": "string",
      "defaultValue": "userupdate-evt",    
      "metadata": {
        "description": "Queue name for the pub/sub pattern."
      }
    },
    "queueMaxDeliveryCount": {
      "type": "int",
      "defaultValue": 2,    
      "metadata": {
        "description": "Max delivery count for the queue"
      }
    }
  },
  "variables": {
    "functionAppName": "[concat('fncapp-', parameters('appName'))]",
    "hostingPlanName": "[concat('asplan-', parameters('appName'))]",
    "applicationInsightsName": "[concat('appins-', parameters('appName'))]",
    "serviceBusName": "[concat('sbus-', parameters('appName'))]",
    "repoURL": "https://github.com/pacodelacruz/serverless-request-bin-durable-functions.git",
    "branch": "master",
    "storageAccountSuffix": "[replace(if(greaterOrEquals(length(parameters('appName')), 20), substring(parameters('appName'), 0, 20), substring(parameters('appName'), 0, length(parameters('appName')))), '-', '')]",
    "storageAccountName": "[concat('st', variables('storageAccountSuffix'), substring(uniquestring(resourceGroup().id), 0, 2))]",
    "storageAccountid": "[concat(resourceGroup().id,'/providers/','Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "2019-06-01" ,
      "kind": "StorageV2",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
        "properties": {
          "accessTier": "Hot",
          "minimumTlsVersion": "TLS1_2",
          "supportsHttpsTrafficOnly": true   
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2018-02-01",
      "name": "[variables('hostingPlanName')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic",
        "size": "Y1",
        "family": "Y",
        "capacity": 0
      },
      "kind": "functionapp",
      "properties": {
        "perSiteScaling": false,
        "reserved": false,
        "targetWorkerCount": 0,
        "targetWorkerSizeId": 0
      }
    },
    {
      "type": "microsoft.insights/components",
      "name": "[variables('applicationInsightsName')]",
      "apiVersion": "2018-05-01-preview",
      "location": "[resourceGroup().location]",
      "kind": "web",
      "tags": {
        "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', variables('applicationInsightsName'))]": "Resource"
      },
      "properties": {
        "Application_Type": "web",
        "RetentionInDays": 90
      }
    },
    {
      "type": "Microsoft.ServiceBus/namespaces",
      "name": "[variables('serviceBusName')]",
      "apiVersion": "2018-01-01-preview",
      "location": "[resourceGroup().location]",
      "properties": {
        "zoneRedundant": false
      },      
      "sku": {  
        "name": "Standard",
        "tier": "Standard"
      }
    },
    {
      "type": "Microsoft.ServiceBus/namespaces/queues",
      "name": "[concat(variables('serviceBusName'), '/', parameters('queueName'))]",
      "apiVersion": "2017-04-01",
      "properties": {
        "lockDuration": "PT1M",
        "maxSizeInMegabytes": 1024,
        "requiresDuplicateDetection": false,
        "requiresSession": false,
        "defaultMessageTimeToLive": "P1D",
        "deadLetteringOnMessageExpiration": true,
        "duplicateDetectionHistoryTimeWindow": "PT10M",
        "maxDeliveryCount": "[parameters('queueMaxDeliveryCount')]",
        "enablePartitioning": false,
        "enableExpress": false
      },
      "dependsOn": [
          "[resourceId('Microsoft.ServiceBus/namespaces', variables('serviceBusName'))]"
      ]
    },  
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2018-11-01",
      "name": "[variables('functionAppName')]",
      "location": "[resourceGroup().location]",
      "kind": "functionapp",
      "properties": {
        "name": "[variables('functionAppName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "hostingEnvironment": "",
        "clientAffinityEnabled": false,
        "siteConfig": {
          "appSettings": [
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2018-05-01-preview').InstrumentationKey]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~3"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "dotnet"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(variables('functionAppName'))]"
            },
            {
              "name": "WEBSITE_MAX_DYNAMIC_APPLICATION_SCALE_OUT",
              "value": "1"
            },
            {
              "name": "ServiceBusConnectionString",
              "value": "[listKeys(resourceId('Microsoft.ServiceBus/namespaces/AuthorizationRules', variables('serviceBusName'), 'RootManageSharedAccessKey'),'2017-04-01').primaryConnectionString]"
            },
            {
              "name": "ServiceBusUserUpdateQueueName",
              "value": "[parameters('queueName')]"
            },
            {
              "name": "ServiceBusUserUpdateQueueMaxDeliveryCount",
              "value": "[parameters('queueMaxDeliveryCount')]"
            }
          ]
        }
      },
      "dependsOn": [
          "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
          "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
          "[resourceId('microsoft.insights/components', variables('applicationInsightsName'))]",
          "[resourceId('Microsoft.ServiceBus/namespaces', variables('serviceBusName'))]"
    //   // ],
    //   // "resources": [
    //   //     {
    //   //         "apiVersion": "2015-08-01",
    //   //         "name": "web",
    //   //         "type": "sourcecontrols",
    //   //         "dependsOn": [
    //   //             "[resourceId('Microsoft.Web/Sites', variables('functionAppName'))]"
    //   //         ],
    //   //         "properties": {
    //   //             "RepoUrl": "[variables('repoURL')]",
    //   //             "branch": "[variables('branch')]",
    //   //             "IsManualIntegration": true
    //   //         }
    //   //     }
      ]
    }    
  ],
  "outputs": {}
}
